name: 自动部署新版本到服务器

on:
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    branches: [master]

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 测试是否可以用docker
        run: docker --version
      - name: 检出代码
        uses: actions/checkout@v4
      - name: 登录到TCR
        run: docker login ccr.ccs.tencentyun.com --username=${{ secrets.TCR_USERNAME }} --password=${{ secrets.TCR_PASSWORD }}
      - name: 构建前端镜像
        run: docker build --tag "ccr.ccs.tencentyun.com/tyler-namespace1/file-upload1:${{ github.ref_name }}" .
      - name: 推送前端镜像
          # 开启调试模式，打印每条命令及其输出
        run: |
          set -x 
          docker push ccr.ccs.tencentyun.com/tyler-namespace1/file-upload1:${{ github.ref_name }}
      - name: 构建后端镜像
        run: |
          cd server
          docker build --tag "ccr.ccs.tencentyun.com/tyler-namespace1/file-upload2:${{ github.ref_name }}" .
      - name: 推送后端镜像
        run: |
          set -x 
          docker push ccr.ccs.tencentyun.com/tyler-namespace1/file-upload2:${{ github.ref_name }}
      - name: 创建envfile和docker-composefile
        # .env文件是给docker-compose读取，拉对应的image
        run: |
          mkdir file-upload
          echo "tag=${{ github.ref_name }}" > file-upload/.env
          cp docker-compose.yml file-upload
      - name: 将文件上传到cvm
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          source: 'file-upload'
          target: '~/demo/'
      - name: 登录到服务器并部署
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PWD }}
          script: |
            docker login ccr.ccs.tencentyun.com --username=${{ secrets.TCR_USERNAME }} --password=${{ secrets.TCR_PASSWORD }}
            cd ~/demo/file-upload/
            docker compose down
            docker compose up -d
            rm -rf .env
            docker logout ccr.ccs.tencentyun.com
